.program blink

; Turn on LED for 100 cycles and off for 100 cycles.
; At 2 kHz, this will toggle pin at 10 Hz (200 cycles / 2000 Hz = 0.1 sec)

.wrap_target
    ;mov osr, pins
    ;out pins, 0b11111
    ;mov isr, pins
    ;in null, 2
    ;mov pins, isr
    ;mov pins, pins

    ;mov isr, pins
    ;mov pins, isr [31]
    in pins, 2
    mov pins, isr [31]
    nop [31]
    nop [31]

    ;in null, 2 [31]
    ;mov pins, isr [31]
    nop [31]
    nop [31]
.wrap

% c-sdk {

// Helper function (for use in C program) to initialize this PIO program
void blink_program_init(PIO pio, uint sm, uint offset, uint pin, float div) {

    // Sets up state machine and wrap target. This function is automatically
    // generated in blink.pio.h.
    pio_sm_config c = blink_program_get_default_config(offset);

    // Allow PIO to control GPIO pin (as output)
    pio_gpio_init(pio, pin);
    pio_gpio_init(pio, pin+1);
    pio_gpio_init(pio, pin+2);
    pio_gpio_init(pio, pin+3);

    // Connect pin to SET pin (control with 'set' instruction)
    sm_config_set_out_pins(&c, pin, 4);

    // Set the pin direction to output (in PIO)
    pio_sm_set_consecutive_pindirs(pio, sm, pin, 4, true);

    // inputs
    sm_config_set_in_pins(&c, 0);
    pio_sm_set_consecutive_pindirs(pio, sm, 0, 2, false);
    
    // Set the clock divider for the state machine
    sm_config_set_clkdiv(&c, div);

    // Load configuration and jump to start of the program
    pio_sm_init(pio, sm, offset, &c);
}

%}